"""
Django settings for vote_cast project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
import logging
from decouple import config
import os
import sys
from dotenv import load_dotenv
from dotenv import dotenv_values

load_dotenv(override=True)  # Ensure .env is reloaded

# Ensure test emails do not use SMTP
env_vars = dotenv_values(".env")
# Force overwrite the environment variable
os.environ["EMAIL_HOST_PASSWORD"] = env_vars.get("EMAIL_HOST_PASSWORD", "")

# Debugging output
# print("✅ EMAIL_HOST_PASSWORD (Forced from .env):", os.environ["EMAIL_HOST_PASSWORD"])

BASE_DIR = Path(__file__).resolve().parent.parent
env_path = BASE_DIR / '.env'  # Ensure we specify the path explicitly


env_vars = dotenv_values(".env")
# print("DEBUG ENV LOADING:", env_vars)  # Debugging

EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")  # Define the variable
# print("Loaded EMAIL_HOST_PASSWORD:", EMAIL_HOST_PASSWORD)


# print("EMAIL_HOST_PASSWORD:", os.environ.get("EMAIL_HOST_PASSWORD"))  # Debugging
LOG_LEVEL = os.environ.get("LOG_LEVEL", "INFO")

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': LOG_LEVEL,
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': LOG_LEVEL,
            'propagate': False,
        },
    },
}

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'CET'

USE_I18N = True

USE_TZ = True

import logging
logging.basicConfig(level=logging.DEBUG)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'default-secret-key')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DJANGO_DEBUG', 'True') == 'True'

ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', '127.0.0.1,localhost').split(',')

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Database (SQLite for now, no need for environment variables yet)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# CSRF_COOKIE_SECURE = True
# SESSION_COOKIE_SECURE = True


# Application definition

DEBUG = True

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',

    'main',
    'users',   
    'voting_sessions',
    'vote',
    'results',
    
   
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]

ROOT_URLCONF = 'vote_cast.urls'

BASE_DIR = Path(__file__).resolve().parent.parent

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',  # Project-level templates folder
            BASE_DIR / 'main/templates/main',  # Main app templates
            BASE_DIR / 'users/templates/users',  # Users app templates
            BASE_DIR / 'vote/templates/vote',  # Users app templates
            BASE_DIR / 'results/templates/results',  # Users app templates
            BASE_DIR / 'voting_sessions/templates/voting_sessions', 
        ],     

        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

LOGIN_REDIRECT_URL = '/voting_sessions/'

WSGI_APPLICATION = 'vote_cast.wsgi.application'
ASGI_APPLICATION = 'vote_cast.asgi.application'


# Channel layers (for chat)
# vote_cast/settings.py

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# settings.py
STATICFILES_STORAGE = "django.contrib.staticfiles.storage.ManifestStaticFilesStorage"


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

APPEND_SLASH = True

STATIC_URL = '/static/'

STATIC_ROOT = BASE_DIR / 'staticfiles'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
    BASE_DIR / 'main' / 'static',
    BASE_DIR / 'users' / 'static',
]

# Default email backend (for production)
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")

TESTING = "test" in sys.argv
# Override for tests
if "test" in sys.argv or "pytest" in sys.argv:
    print("⚠️ Running tests - disabling SMTP settings!")
    
    EMAIL_BACKEND = "django.core.mail.backends.locmem.EmailBackend"
    EMAIL_HOST = ""
    EMAIL_PORT = None
    EMAIL_USE_TLS = False
    EMAIL_USE_SSL = False
    EMAIL_HOST_USER = ""
    EMAIL_HOST_PASSWORD = ""

    os.environ["EMAIL_HOST_PASSWORD"] = ""  # Force clear

    print(f"✅ DEBUG FINAL EMAIL_BACKEND: {EMAIL_BACKEND}")  # Verify override
